# Automatically generated by nengo-bones, do not edit this file directly

[build_sphinx]
source-dir = docs
build-dir = docs/_build
all_files = 1

[coverage:run]
source = ./
relative_files = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    # place ``# pragma: no cover`` at the end of a line to ignore it
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # `pass` is just a placeholder, fine if it's not covered
    ^[ \t]*pass$


# Patterns for files to exclude from reporting
omit =
    */tests/test*
    nengo_dl/tests/dummies.py

[flake8]
exclude =
    __init__.py
ignore =
    E123
    E133
    E203
    E226
    E241
    E242
    E501
    E731
    F401
    W503
    C901
max-complexity = 10
max-line-length = 88

[tool:pytest]
addopts = --disable-warnings
norecursedirs =
    .*
    *.egg
    build
    dist
    docs
filterwarnings =
    always
xfail_strict = True
nengo_simloader = nengo_dl.tests.make_test_sim
nengo_test_unsupported =
    tests/test_simulator.py::test_warn_on_opensim_del
        "nengo-dl raises a different (more visible) warning, see
        tests/test_nengo_tests.py::test_warn_on_opensim_del"
    tests/test_simulator.py::test_signal_init_values
        "different method required to manually step simulator, see
        tests/test_nengo_tests.py::test_signal_init_values"
    tests/test_simulator.py::test_entry_point
        "overridden so we can pass custom test simulators, see
        tests/test_nengo_tests.py::test_entry_point"
    tests/test_simulator.py::test_simulator_progress_bars
        "nengo-dl uses a different progress bar system, see
        tests/test_utils.py::test_progress_bar"
    tests/test_simulator.py::test_dtype[*
        "nengo-dl uses a different system for signals/dtype, see
        tests/test_nengo_tests.py::test_dtype"
    tests/test_simulator.py::test_time_absolute
        "simulation times may not line up exactly if unroll_simulation != 1, see
        tests/test_nengo_tests.py::test_time_absolute"
    tests/test_simulator.py::test_invalid_run_time
        "simulation times may not line up exactly if unroll_simulation != 1, see
        tests/test_nengo_tests.py::test_invalid_run_time"
    tests/test_simulator.py::test_steps
        "simulation times may not line up exactly if unroll_simulation != 1, see
        tests/test_nengo_tests.py::test_steps"
    tests/test_node.py::test_args
        "time is passed as np.float32, not a float, see
        tests/test_nengo_tests.py::test_args"
    tests/test_node.py::test_unconnected_node
        "need to set `unroll_simulation` to ensure node runs the correct number of
        times, see tests/test_nengo_tests.py::test_unconnected_node"
    tests/test_ensemble.py::test_gain_bias
        "use allclose instead of array_equal, see
        tests/test_nengo_tests.py::test_gain_bias"
    tests/test_transforms.py::test_sparse[False-*
        "nengo-dl doesn't raise a warning for scipy=False, see
        tests/test_nengo_tests.py::test_sparse"
    tests/test_copy.py::test_pickle_sim[*
        "nengo-dl does not support pickling a Simulator, see
        tests/test_simulator.py::test_pickle_error"
    tests/test_probe.py::test_multirun
        "simulation times may not line up exactly if unroll_simulation != 1, see
        tests/test_nengo_tests.py::test_multirun"
    tests/test_learning_rules.py::test_rls_*
        "RLS learning rule not implemented"
    tests/test_processes.py::test_x_copy
        "the behaviour of Processes that return None is not well defined (it's allowed
        but behaves oddly in NengoCore, it's an explicit error in NengoDL)"
allclose_tolerances =
    tests/test_synapses.py::test_lowpass atol=5e-7
    tests/test_synapses.py::test_triangle atol=5e-7
    tests/test_synapses.py::test_decoders atol=5e-7
    tests/test_synapses.py::test_alpha atol=5e-5
    tests/test_synapses.py::test_linearfilter atol=1e-4
    tests/test_transforms.py::test_convolution[* atol=1e-6
    tests/test_transforms_conv.py::test_convolution[* atol=1e-4
    tests/test_transforms_conv.py::test_convolution_groups[* atol=1e-4

[pylint]

[pylint.messages]
disable =
    arguments-differ,
    assignment-from-no-return,
    attribute-defined-outside-init,
    blacklisted-name,
    comparison-with-callable,
    duplicate-code,
    fixme,
    import-error,
    invalid-name,
    invalid-sequence-index,
    len-as-condition,
    literal-comparison,
    no-else-raise,
    no-else-return,
    no-member,
    no-name-in-module,
    not-an-iterable,
    not-context-manager,
    protected-access,
    redefined-builtin,
    stop-iteration-return,
    too-few-public-methods,
    too-many-arguments,
    too-many-branches,
    too-many-instance-attributes,
    too-many-lines,
    too-many-locals,
    too-many-return-statements,
    too-many-statements,
    unexpected-keyword-arg,
    unidiomatic-typecheck,
    unsubscriptable-object,
    unsupported-assignment-operation,
    unused-argument,

[pylint.imports]
known-third-party =
    matplotlib,
    nengo,
    numpy,
    pytest,
    PIL,
    packaging,
    progressbar,
    tensorflow,

[pylint.format]
max-line-length = 88

[pylint.classes]
valid-metaclass-classmethod-first-arg = metacls

[pylint.reports]
reports = no
score = no

[codespell]
skip = ./build,*/_build,*-checkpoint.ipynb,./.eggs,./*.egg-info,./.git,*/_vendor,./.mypy_cache,
